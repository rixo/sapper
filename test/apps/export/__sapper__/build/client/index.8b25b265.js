import { S as SvelteComponent, i as init, s as safe_not_equal, e as element, d as text, h as claim_element, j as children, k as claim_text, l as detach, A as attr, m as insert, o as append, n as noop, x as empty, C as destroy_each } from './chunk.cf5f63ce.js';

/* test/apps/export/src/routes/boom/index.svelte generated by Svelte v3.6.9 */

function get_each_context(ctx, list, i) {
	const child_ctx = Object.create(ctx);
	child_ctx.a = list[i];
	return child_ctx;
}

// (5:0) {#each list as a}
function create_each_block(ctx) {
	var a, t_value = ctx.a, t, a_href_value;

	return {
		c() {
			a = element("a");
			t = text(t_value);
			this.h();
		},

		l(nodes) {
			a = claim_element(nodes, "A", { href: true }, false);
			var a_nodes = children(a);

			t = claim_text(a_nodes, t_value);
			a_nodes.forEach(detach);
			this.h();
		},

		h() {
			attr(a, "href", a_href_value = "boom/" + ctx.a);
		},

		m(target, anchor) {
			insert(target, a, anchor);
			append(a, t);
		},

		p: noop,

		d(detaching) {
			if (detaching) {
				detach(a);
			}
		}
	};
}

function create_fragment(ctx) {
	var each_1_anchor;

	var each_value = ctx.list;

	var each_blocks = [];

	for (var i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = empty();
		},

		l(nodes) {
			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_1_anchor = empty();
		},

		m(target, anchor) {
			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert(target, each_1_anchor, anchor);
		},

		p(changed, ctx) {
			if (changed.list) {
				each_value = ctx.list;

				for (var i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(changed, child_ctx);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}
				each_blocks.length = each_value.length;
			}
		},

		i: noop,
		o: noop,

		d(detaching) {
			destroy_each(each_blocks, detaching);

			if (detaching) {
				detach(each_1_anchor);
			}
		}
	};
}

function instance($$self) {
	const list = Array(20).fill().map((_, i) => i + 1);

	return { list };
}

class Index extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, []);
	}
}

export default Index;
