import { S as SvelteComponent, i as init, s as safe_not_equal, x as empty, q as mount_component, m as insert, b as transition_out, z as check_outros, t as transition_in, l as detach, u as destroy_component, B as onMount, y as group_outros } from './chunk.62c3a931.js';

/* test/apps/css/src/routes/bar.svelte generated by Svelte v3.6.9 */

function create_fragment(ctx) {
	var switch_instance_anchor, current;

	var switch_value = ctx.Title;

	function switch_props(ctx) {
		return {};
	}

	if (switch_value) {
		var switch_instance = new switch_value(switch_props());
	}

	return {
		c() {
			if (switch_instance) switch_instance.$$.fragment.c();
			switch_instance_anchor = empty();
		},

		l(nodes) {
			if (switch_instance) switch_instance.$$.fragment.l(nodes);
			switch_instance_anchor = empty();
		},

		m(target, anchor) {
			if (switch_instance) {
				mount_component(switch_instance, target, anchor);
			}

			insert(target, switch_instance_anchor, anchor);
			current = true;
		},

		p(changed, ctx) {
			if (switch_value !== (switch_value = ctx.Title)) {
				if (switch_instance) {
					group_outros();
					const old_component = switch_instance;
					transition_out(old_component.$$.fragment, 1, 0, () => {
						destroy_component(old_component, 1);
					});
					check_outros();
				}

				if (switch_value) {
					switch_instance = new switch_value(switch_props());

					switch_instance.$$.fragment.c();
					transition_in(switch_instance.$$.fragment, 1);
					mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
				} else {
					switch_instance = null;
				}
			}
		},

		i(local) {
			if (current) return;
			if (switch_instance) transition_in(switch_instance.$$.fragment, local);

			current = true;
		},

		o(local) {
			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
			current = false;
		},

		d(detaching) {
			if (detaching) {
				detach(switch_instance_anchor);
			}

			if (switch_instance) destroy_component(switch_instance, detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { Title } = $$props;

	onMount(() => {
		import('./Title.9d11ad34.js').then(mod => {
			$$invalidate('Title', Title = mod.default);
		});
	});

	$$self.$set = $$props => {
		if ('Title' in $$props) $$invalidate('Title', Title = $$props.Title);
	};

	return { Title };
}

class Bar extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, ["Title"]);
	}
}

export default Bar;
