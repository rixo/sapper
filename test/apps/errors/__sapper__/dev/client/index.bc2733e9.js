import { c as SvelteComponentDev, d as init, b as safe_not_equal, h as element, i as text, j as space, k as claim_element, l as children, m as claim_text, n as detach, o as add_location, p as insert, q as append, a as noop } from './chunk.035fae03.js';

/* src/routes/index.svelte generated by Svelte v3.2.2 */

const file = "src/routes/index.svelte";

function create_fragment(ctx) {
	var h1, t0, t1, a0, t2, t3, a1, t4, t5, a2, t6, t7, a3, t8;

	return {
		c: function create() {
			h1 = element("h1");
			t0 = text("root");
			t1 = space();
			a0 = element("a");
			t2 = text("nope");
			t3 = space();
			a1 = element("a");
			t4 = text("blog/nope");
			t5 = space();
			a2 = element("a");
			t6 = text("throw");
			t7 = space();
			a3 = element("a");
			t8 = text("preload-reject");
			this.h();
		},

		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", {}, false);
			var h1_nodes = children(h1);

			t0 = claim_text(h1_nodes, "root");
			h1_nodes.forEach(detach);
			t1 = claim_text(nodes, "\n\n");

			a0 = claim_element(nodes, "A", { href: true }, false);
			var a0_nodes = children(a0);

			t2 = claim_text(a0_nodes, "nope");
			a0_nodes.forEach(detach);
			t3 = claim_text(nodes, "\n");

			a1 = claim_element(nodes, "A", { href: true }, false);
			var a1_nodes = children(a1);

			t4 = claim_text(a1_nodes, "blog/nope");
			a1_nodes.forEach(detach);
			t5 = claim_text(nodes, "\n");

			a2 = claim_element(nodes, "A", { href: true }, false);
			var a2_nodes = children(a2);

			t6 = claim_text(a2_nodes, "throw");
			a2_nodes.forEach(detach);
			t7 = claim_text(nodes, "\n");

			a3 = claim_element(nodes, "A", { href: true }, false);
			var a3_nodes = children(a3);

			t8 = claim_text(a3_nodes, "preload-reject");
			a3_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			add_location(h1, file, 0, 0, 0);
			a0.href = "nope";
			add_location(a0, file, 2, 0, 15);
			a1.href = "blog/nope";
			add_location(a1, file, 3, 0, 39);
			a2.href = "throw";
			add_location(a2, file, 4, 0, 73);
			a3.href = "preload-reject";
			add_location(a3, file, 5, 0, 99);
		},

		m: function mount(target, anchor) {
			insert(target, h1, anchor);
			append(h1, t0);
			insert(target, t1, anchor);
			insert(target, a0, anchor);
			append(a0, t2);
			insert(target, t3, anchor);
			insert(target, a1, anchor);
			append(a1, t4);
			insert(target, t5, anchor);
			insert(target, a2, anchor);
			append(a2, t6);
			insert(target, t7, anchor);
			insert(target, a3, anchor);
			append(a3, t8);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(h1);
				detach(t1);
				detach(a0);
				detach(t3);
				detach(a1);
				detach(t5);
				detach(a2);
				detach(t7);
				detach(a3);
			}
		}
	};
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
	}
}

export default Index;
