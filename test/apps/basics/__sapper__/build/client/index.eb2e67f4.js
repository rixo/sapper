import { S as SvelteComponent, i as init, s as safe_not_equal, e as element, d as text, h as claim_element, j as children, k as claim_text, l as detach, B as attr, C as listen, m as insert, o as append, n as noop, D as onMount } from './chunk.68ae2c07.js';

/* test/apps/basics/src/routes/delete-test/index.svelte generated by Svelte v3.6.9 */

function create_fragment(ctx) {
	var button, t, dispose;

	return {
		c() {
			button = element("button");
			t = text("delete");
			this.h();
		},

		l(nodes) {
			button = claim_element(nodes, "BUTTON", { class: true }, false);
			var button_nodes = children(button);

			t = claim_text(button_nodes, "delete");
			button_nodes.forEach(detach);
			this.h();
		},

		h() {
			attr(button, "class", "del");
			dispose = listen(button, "click", del);
		},

		m(target, anchor) {
			insert(target, button, anchor);
			append(button, t);
		},

		p: noop,
		i: noop,
		o: noop,

		d(detaching) {
			if (detaching) {
				detach(button);
			}

			dispose();
		}
	};
}

function del() {
	fetch(`delete-test/42.json`, { method: 'DELETE' })
		.then(r => r.json())
		.then(data => {
			window.deleted = data;
		});
}

function instance($$self) {
	onMount(() => {
		window.deleted = null;
	});

	return {};
}

class Index extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, []);
	}
}

export default Index;
